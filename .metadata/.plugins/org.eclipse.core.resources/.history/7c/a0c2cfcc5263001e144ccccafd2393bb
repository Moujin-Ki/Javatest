package ex03;

class Counter3{
	int count=0;
	
	public void increment() {
		synchronized(this) {
		count++;
		}
	}
	public void descrement() {
		synchronized(this) {
			count--;
		}
	}
	
	public int getCount() {return count;}
}


public class CurrentThreadName6 {
	
	public static Counter3 cnt = new Counter3();
	public static void main(String[] args) throws InterruptedException {
		Runnable task1 = () -> {
			for(int i =0; i<5 ; i++) {
				System.out.println("Hello");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					
					e.printStackTrace();
				}
			}
		};
		Runnable task2 = () -> {
			for(int i =0; i<1000 ; i++) {
				System.out.println("World");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
				
					e.printStackTrace();
				}
			}
		};
			
			
		
		Thread t1 = new Thread(task1);
		Thread t2 = new Thread(task2);
		t1.start();
		t2.start();
		t1.join();
		t2.join();
		
		System.out.print("count : " + cnt.getCount());
		
	}

}
